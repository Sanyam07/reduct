import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output

import plotly.graph_objs as go

import pandas as pd

df = pd.read_csv('data/testdata.csv')
fields = list(df.columns)

app = dash.Dash()

app.layout = html.Div(children=[
    html.H1(children='Data embedding'),

    #html.Div(children='''
    #    Dash: A web application framework for Python.
    #'''),

    html.Label('X-axis'),
    dcc.Dropdown(
        id='x_dropdown',
        options = [{'label':v, 'value':v} for v in fields],
        value='A'
    ),

    html.Label('Y-axis'),
    dcc.Dropdown(
        id='y_dropdown',
        options = [{'label':v, 'value':v} for v in fields],
        value='B'
    ),

    dcc.Graph(
        id='plain-scatterplot'  # No figure - will be generated by callback
    )
])

@app.callback(
    Output('plain-scatterplot','figure'),
    [Input('x_dropdown','value'), Input('y_dropdown','value')]
)
def update_figure(x_field, y_field):
    figure = {
        'data': [
            go.Scatter(x=df[x_field], y=df[y_field], mode='markers',
                       marker=dict(size=10))
        ],
        'layout': {
            'title': 'Plot of {} against {}'.format(y_field, x_field)
        }
    }
    return figure

if __name__ == '__main__':
    app.run_server(debug=True)
